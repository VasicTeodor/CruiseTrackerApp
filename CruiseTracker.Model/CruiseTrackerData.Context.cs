//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CruiseTracker.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CruiseTrackerDBEntities : DbContext
    {
        public CruiseTrackerDBEntities()
            : base("name=CruiseTrackerDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__RefactorLog> C__RefactorLog { get; set; }
        public virtual DbSet<Agencija> Agencijas { get; set; }
        public virtual DbSet<Brod> Brods { get; set; }
        public virtual DbSet<Destinacija> Destinacijas { get; set; }
        public virtual DbSet<Destinacija_Koristi_Luku> Destinacija_Koristi_Luku { get; set; }
        public virtual DbSet<Firma> Firmas { get; set; }
        public virtual DbSet<Kapetan> Kapetans { get; set; }
        public virtual DbSet<Karta> Kartas { get; set; }
        public virtual DbSet<Korisnik> Korisniks { get; set; }
        public virtual DbSet<Luka> Lukas { get; set; }
        public virtual DbSet<Plovidba> Plovidbas { get; set; }
        public virtual DbSet<Putnicki> Putnickis { get; set; }
        public virtual DbSet<Putnik> Putniks { get; set; }
        public virtual DbSet<Teretni> Teretnis { get; set; }
    
        public virtual ObjectResult<Nullable<int>> BrojPlovidbiZaIstuDestinacijuIKapetana(Nullable<int> iDDEST, string kAPIME)
        {
            var iDDESTParameter = iDDEST.HasValue ?
                new ObjectParameter("IDDEST", iDDEST) :
                new ObjectParameter("IDDEST", typeof(int));
    
            var kAPIMEParameter = kAPIME != null ?
                new ObjectParameter("KAPIME", kAPIME) :
                new ObjectParameter("KAPIME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BrojPlovidbiZaIstuDestinacijuIKapetana", iDDESTParameter, kAPIMEParameter);
        }
    
        [DbFunction("CruiseTrackerDBEntities", "GetCruisesCountForDestinationAndCaptain")]
        public virtual IQueryable<Nullable<int>> GetCruisesCountForDestinationAndCaptain(string dESTNAME, string cAPNAME)
        {
            var dESTNAMEParameter = dESTNAME != null ?
                new ObjectParameter("DESTNAME", dESTNAME) :
                new ObjectParameter("DESTNAME", typeof(string));
    
            var cAPNAMEParameter = cAPNAME != null ?
                new ObjectParameter("CAPNAME", cAPNAME) :
                new ObjectParameter("CAPNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[CruiseTrackerDBEntities].[GetCruisesCountForDestinationAndCaptain](@DESTNAME, @CAPNAME)", dESTNAMEParameter, cAPNAMEParameter);
        }
    }
}
